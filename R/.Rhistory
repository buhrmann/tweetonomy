vcoreness = coreness(graph)
table(vcoreness)
}
kcore_dist(g)
kcore_dist(g)
g = filter_min_coreness(g, min_coreness=2)
vcount(g)
ecount(g)
find_communities = function(graph, algo, weights=NULL) {
if (weights==NULL) {
weights = E(graph)$weight
}
if (algo == 'walktrap') {
return (cluster_walktrap(graph, weights=weights))
} else if (algo == 'edge_betweenness') {
return (cluster_edge_betweenness(graph, weights=weights))
} else if (algo == 'fast_greedy') {
return (cluster_fast_greedy(graph, weights=weights))
} else if (algo == 'spinglass') {
return (cluster_spinglass(graph, weights=weights))
} else if (algo == 'leading_eigen') {
return (cluster_leading_eigen(graph, weights=weights))
} else if (algo == 'optimal') {
return (cluster_optimal(graph, weights=weights))
} else if (algo == 'louvain') {
return (cluster_louvain(graph, weights=weights))
} else if (algo == 'label_prop') {
return (cluster_label_prop(graph, weights=weights))
} else if (algo == 'infomap') {
return (cluster_infomap(graph, e.weights=weights))
}
}
coms = find_communities(g, algo)
source('utils.R')
coms = find_communities(g, algo)
coms = find_communities(g, algo, weights=NULL)
t = NULL
if(t==NULL) print "NULL"
if(t==NULL) {print("NULL")}
source('utils.R')
coms = find_communities(g, algo)
algo = 'fast_greedy'
coms = find_communities(g, algo)
?cluster_fast_greedy
source('utils.R')
coms = find_communities(g, algo)
sort(sizes(coms))
sort(sizes(coms), decreasing=T)
sizes(coms)
length(coms)
sizes(coms)
sort(sizes(coms), decreasing=T)
g_plot(g)
g = filter_min_community_size(g, coms, 6)
V(g)$com
g = graph.data.frame(edge_list)
g = simplify(g, edge.attr.comb=list(weight="sum"))
g = filter_small_components(g, min_size=3, mode="weak")
g = filter_min_coreness(g, min_coreness=2)
algo = 'fast_greedy'
coms = find_communities(g, algo)
g$com = membership(coms)
g = filter_min_community_size(g, coms, 6)
g_plot(g)
g = color_by_attribute(g, "com")
g_plot(g)
V(g)$com
V(g)
g = graph.data.frame(edge_list)
g = simplify(g, edge.attr.comb=list(weight="sum"))
g = filter_small_components(g, min_size=3, mode="weak")
g = filter_min_coreness(g, min_coreness=2)
V(g)
coms = find_communities(g, algo)
V(g)$com = membership(coms)
g = filter_min_community_size(g, coms, 6)
g = color_by_attribute(g, "com")
g_plot(g)
degree(g)
library(igraph)
library(networkD3)
library(tcltk)
library(rgl)
setwd("~/Code/tweetonomy/R")
source('utils.R')
# Graph from edge lists
colnames = c("from", "to", "weight")
edge_list = read.table("~/Code/tweetonomy/data/retweets.txt", sep='\t', header=T, col.names=colnames)
lout1 = layout.fruchterman.reingold
lout2 = layout.kamada.kawai
# igraph
# --------------------------------------------------------------------
g = graph.data.frame(edge_list)
g = simplify(g, edge.attr.comb=list(weight="sum"))
# Connected components
component_sizes(g, "weak")
g = filter_small_components(g, min_size=3, mode="weak")
vcount(g)
ecount(g)
# coreness
kcore_dist(g)
g = filter_min_coreness(g, min_coreness=2)
vcount(g)
ecount(g)
g_plot(g)
# communities
algo = 'fast_greedy'
coms = find_communities(g, algo)
V(g)$com = membership(coms)
sort(sizes(coms), decreasing=T)
g = filter_min_community_size(g, coms, 6)
degree(g)
g = add_color_by_attribute(g, "com")
degree(g)
g_plot(g)
library(igraph)
library(networkD3)
library(tcltk)
library(rgl)
setwd("~/Code/tweetonomy/R")
source('utils.R')
# Graph from edge lists
colnames = c("from", "to", "weight")
edge_list = read.table("~/Code/tweetonomy/data/retweets.txt", sep='\t', header=T, col.names=colnames)
lout1 = layout.fruchterman.reingold
lout2 = layout.kamada.kawai
# igraph
# --------------------------------------------------------------------
g = graph.data.frame(edge_list)
g = simplify(g, edge.attr.comb=list(weight="sum"))
# Connected components
component_sizes(g, "weak")
g = filter_small_components(g, min_size=3, mode="weak")
vcount(g)
ecount(g)
# coreness
kcore_dist(g)
g = filter_min_coreness(g, min_coreness=2)
vcount(g)
ecount(g)
g_plot(g)
# communities
algo = 'fast_greedy'
coms = find_communities(g, algo)
V(g)$com = membership(coms)
sort(sizes(coms), decreasing=T)
g = filter_topn_communities(g, coms, 10)
g = add_color_by_attribute(g, "com")
g_plot(g)
has.vertex.attribute(g, 'com')
list.vertex.attributes(g)
vertex.attributes(g)
list.vertex.attributes(g)
get.vertex.attribute(g, "com")
source('utils.R')
source('utils.R')
source('utils.R')
library(igraph)
library(networkD3)
library(tcltk)
library(rgl)
setwd("~/Code/tweetonomy/R")
source('utils.R')
# Graph from edge lists
colnames = c("from", "to", "weight")
edge_list = read.table("~/Code/tweetonomy/data/retweets.txt", sep='\t', header=T, col.names=colnames)
lout1 = layout.fruchterman.reingold
lout2 = layout.kamada.kawai
# igraph
# --------------------------------------------------------------------
g = graph.data.frame(edge_list)
g = simplify(g, edge.attr.comb=list(weight="sum"))
# Connected components
component_sizes(g, "weak")
g = filter_small_components(g, min_size=3, mode="weak")
vcount(g)
ecount(g)
# coreness
kcore_dist(g)
g = filter_min_coreness(g, min_coreness=2)
vcount(g)
ecount(g)
g_plot(g)
# communities
algo = 'fast_greedy'
coms = find_communities(g, algo)
V(g)$com = membership(coms)
sort(sizes(coms), decreasing=T)
g = filter_topn_communities(g, coms, 10)
#g = filter_min_community_size(g, coms, 6)
g_plot(g, layout=NULL, colorAttr=NULL)
source('utils.R')
g_plot(g, layout=NULL, colorAttr=NULL)
library(dplyr)
g %>% filter_small_components(min_size=3)
g = graph.data.frame(edge_list)
g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(coms, 10) %>%
g_plot()
source('utils.R')
g = graph.data.frame(edge_list)
g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(coms, 10) %>%
g_plot()
g_plot(layout=NULL, colorAttr=NULL)
g = graph.data.frame(edge_list)
g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(coms, 10) %>%
g_plot(layout=NULL, colorAttr=NULL)
source('utils.R')
g = graph.data.frame(edge_list)
g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(n=10) %>%
g_plot(layout=NULL, colorAttr=NULL)
source('utils.R')
g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(n=10) %>%
g_plot(layout=NULL, colorAttr=NULL)
source('utils.R')
h = g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(n=10) %>%
g_plot(layout=layout.kamada.kawai, colorAttr=NULL)
g_plot(h,layout=NULL, colorAttr=NULL)
vignette(lazy_eval)
?lazy
??lazy
?substitute
vcount(h)
vcount(filter_isolates(h))
g = graph.data.frame(edge_list)
h = g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(n=10) %>%
filter_isolates() %>%
g_plot(layout=layout.kamada.kawai, colorAttr=NULL)
g_plot(h,layout=layout.ldl, colorAttr=NULL)
g_plot(h,layout=layout.lrl, colorAttr=NULL)
g_plot(h,layout=layout.lgl, colorAttr=NULL)
g_plot(h,layout=layout.spring, colorAttr=NULL)
g_plot(h,layout=layout.graphopt, colorAttr=NULL)
h
attr(h, 'coms') = coms
h$coms
attr(h, 'coms')
h$coms = coms
h
g_plot(h,layout=layout.graphopt, colorAttr=NULL)
source('utils.R')
g = graph.data.frame(edge_list)
h = g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(n=10) %>%
filter_isolates() %>%
reweight_by_comunity()
g_plot(layout=layout.kamada.kawai, colorAttr=NULL)
g = graph.data.frame(edge_list)
h = g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(n=10) %>%
filter_isolates() %>%
#reweight_by_comunity()
g_plot(layout=layout.kamada.kawai, colorAttr=NULL)
h
h$coms
source('utils.R')
g = graph.data.frame(edge_list)
h = g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(n=10) %>%
filter_isolates() %>%
#reweight_by_comunity()
g_plot(layout=layout.kamada.kawai, colorAttr=NULL)
?get
type(h)
class(h)
h[['coms']]
source('utils.R')
g = graph.data.frame(edge_list)
h = g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(n=10) %>%
filter_isolates() %>%
#reweight_by_comunity()
g_plot(layout=layout.kamada.kawai, colorAttr=NULL)
source('utils.R')
source('utils.R')
g = graph.data.frame(edge_list)
h = g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(n=10, algo="fast_greedy") %>%
filter_isolates() %>%
reweight_by_community(10, 1) %>%
g_plot(layout=layout.kamada.kawai, colorAttr=NULL)
h = g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(n=10, algo="fast_greedy") %>%
filter_isolates() %>%
reweight_by_community(2, 1) %>%
g_plot(layout=layout.kamada.kawai, colorAttr=NULL)
h = g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(n=10, algo="fast_greedy") %>%
filter_isolates() %>%
#reweight_by_community(2, 1) %>%
g_plot(layout=layout.kamada.kawai, colorAttr=NULL)
h = g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(n=10, algo="fast_greedy") %>%
filter_isolates() %>%
#reweight_by_community(2, 1) %>%
g_plot(layout=NULL, colorAttr=NULL)
h = g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(n=10, algo="fast_greedy") %>%
filter_isolates() %>%
reweight_by_community(2, 1) %>%
g_plot(layout=NULL, colorAttr=NULL)
h = g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(n=10, algo="fast_greedy") %>%
filter_isolates() %>%
reweight_by_community(10, 1) %>%
g_plot(layout=NULL, colorAttr=NULL)
h = g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(n=10, algo="fast_greedy") %>%
filter_isolates() %>%
reweight_by_community(2, 1) %>%
g_plot(layout=NULL, colorAttr=NULL)
h = g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(n=10, algo="fast_greedy") %>%
filter_isolates() %>%
reweight_by_community(1, 1) %>%
g_plot(layout=NULL, colorAttr=NULL)
h = g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(n=10, algo="fast_greedy") %>%
filter_isolates() %>%
#reweight_by_community(1, 1) %>%
g_plot(layout=NULL, colorAttr=NULL)
h = g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(n=10, algo="fast_greedy") %>%
filter_isolates() %>%
reweight_by_community(2, 1) %>%
g_plot(layout=NULL, colorAttr=NULL)
h = g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(n=10, algo="fast_greedy") %>%
filter_isolates() %>%
reweight_by_community(2, 1) %>%
g_plot(layout=NULL, colorAttr=NULL)
h = g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(n=10, algo="fast_greedy") %>%
filter_isolates() %>%
reweight_by_community(2, 1) %>%
g_plot(layout=NULL, colorAttr=NULL)
h = g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(n=10, algo="fast_greedy") %>%
filter_isolates() %>%
reweight_by_community(3, 1) %>%
g_plot(layout=NULL, colorAttr=NULL)
g_plot(h,layout=layout.graphopt, colorAttr=NULL)
source('utils.R')
g_plot(h,layout=layout.graphopt, colorAttr=NULL)
h = g %>%
filter_small_components(min_size=3) %>%
filter_min_coreness(min_coreness=2) %>%
filter_topn_communities(n=10, algo="fast_greedy") %>%
filter_isolates() %>%
#reweight_by_community(3, 1) %>%
g_plot(layout=NULL, colorAttr=NULL)
source('utils.R')
g_plot(h,layout=layout.graphopt, colorAttr=NULL)
source('utils.R')
g_plot(h,layout=layout.graphopt, colorAttr=NULL, mode='r')
g_plot(h,layout=layout.graphopt, colorAttr=NULL, mode='tk')
g_plot(h,layout=layout.graphopt, colorAttr=NULL, mode='rgl')
g_plot(h,layout=layout.graphopt, colorAttr=NULL, mode='gl')
g_plot(h,layout=NULL, colorAttr=NULL, mode='gl')
?light3d
?material3d
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='gl')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='gl')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='gl')
rgl.open()
rgl.bg(color="white", alpha=c(.3), back="fill", sphere = FALSE, fogtype = "none", line_antialias = TRUE)
rgl.viewpoint(0, 0, fov=100, zoom=.5)
rgl.material(shininess=0)
do.call(rglplot, args)
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='gl')
rgl.close()
source('utils.R')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='gl')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='gl')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='gl')
rgl.close()
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='gl')
?light3d
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='gl')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
?layout.fruchterman.reingold
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
?with_fr
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
?layout_with_fr
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
q
q
exit
quit
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
_add_layout_
add_layout_
?add_layout_
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
igraph_layout_modifier
inherits(component_wise, "igraph_layout_modifier")
inherits(component_wise(), "igraph_layout_modifier")
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
?with_fr
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
source('utils.R')
g_plot(h,layout=NULL, colorAttr=NULL, mode='r')
layout = layout_with_fr(h, weights=E(h)$weight, niter=1000)
str(layout)
layout$args
